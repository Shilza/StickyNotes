{"version":3,"sources":["features/dashboard/hooks/index.js","features/auth/atoms/Input.js","features/auth/atoms/Form.js","features/auth/atoms/Error.js","features/auth/atoms/SubmitButton.js","features/auth/atoms/index.js","features/dashboard/atoms/AddCardButton.js","features/dashboard/atoms/AddColumnButton.js","features/dashboard/atoms/OptionsButton.js","features/dashboard/atoms/Mark.js","features/dashboard/atoms/TextArea.js","ui/molecules/PopoverTitle.js","features/dashboard/api/index.js","ui/organisms/Popover.js","features/dashboard/molecules/ColumnPopover.js","features/dashboard/molecules/Title.js","features/dashboard/selectors/index.js","features/dashboard/molecules/MiniMarks.js","features/dashboard/molecules/Card.js","features/dashboard/molecules/NewCard.js","features/dashboard/molecules/Marks.js","features/dashboard/organisms/Cards.js","features/dashboard/organisms/Column.js","features/dashboard/organisms/EditModal.js","features/dashboard/utils/index.js","features/dashboard/organisms/NewColumn.js","features/dashboard/molecules/BoardPopover.js","features/dashboard/organisms/BoardHeader.js","features/dashboard/organisms/NewColumnContainer.js","features/dashboard/organisms/Columns.js","features/dashboard/pages/Dashboard.js","features/dashboard/index.js"],"names":["__webpack_require__","d","__webpack_exports__","useOnClickOutside","react__WEBPACK_IMPORTED_MODULE_0__","ref","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","Input","styled","input","_templateObject","props","height","Form","form","Form_templateObject","Error","span","Error_templateObject","SubmitButton","Button","SubmitButton_templateObject","AddButton","AddCardButton","_ref","addNewCard","react_default","a","createElement","onClick","atoms","name","AddColumnButton","AddColumnButton_templateObject","OptionsButton","OptionsButton_templateObject","Mark","div","Mark_templateObject","backgroundColor","TextArea","textarea","TextArea_templateObject","PopoverTitle","PopoverTitle_templateObject","GET_COLUMNS","gql","api_templateObject","GET_BOARD","_templateObject2","CREATE_RECORD","_templateObject3","CREATE_COLUMN","_templateObject4","REMOVE_COLUMN","_templateObject5","UPDATE_RECORD","_templateObject6","CREATE_MARK","_templateObject7","REMOVE_MARK","_templateObject8","RENAME_COLUMN","_templateObject9","REMOVE_RECORD","_templateObject10","REORDER_COLUMNS","_templateObject11","REORDER_RECORDS","_templateObject12","REMOVE_BOARD","_templateObject13","RENAME_BOARD","_templateObject14","CHANGE_BOARD_COLOR","_templateObject15","Popover","Popover_templateObject","top","left","ColumnPopover","withApollo","closePopover","columnId","client","op","popoverRef","useRef","_useState","useState","_useState2","Object","slicedToArray","isLoading","setIsLoading","mutate","mutation","variables","then","removeColumn","catch","error","toast","getErrorMessage","disabled","color","Container","Title_templateObject","Text","Title_templateObject2","Title","icon","children","isTitleRenamed","setIsTitleRenamed","_useState3","_useState4","isPopoverOpen","setIsPopoverOpen","titleRef","_ref2","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","focus","stop","apply","this","arguments","title","value","length","renameColumn","auth_atoms","defaultValue","getMarksByRecordId","columns","recordId","column","find","records","record","id","is","undefined","marks","MarksList","ul","MiniMarks_templateObject","MiniMark","li","MiniMarks_templateObject2","MiniMarks","useStore","$dashboard","miniMarks","Fragment","map","index","key","Card_templateObject","EditButton","Card_templateObject2","Card","isHovered","setIsEditHovered","_usePortal","usePortal","openPortal","closePortal","isOpen","Portal","Card_Container","onMouseOver","onMouseLeave","MiniMarks_MiniMarks","text","EditModal","NewCard_templateObject","NewCard_templateObject2","NewCard_templateObject3","NewCard","createCard","removeNewCard","textRef","onSubmit","preventDefault","_x","NewCard_Container","NewCard_TextArea","placeholder","NewCard_AddButton","type","Marks_templateObject","colors","Marks","markOnClick","some","markId","removeMark","remove","data","addMark","createMark","Marks_Container","CardsList","Cards_templateObject","Cards","containerRef","scrollTop","scrollHeight","onSortEnd","_ref3","oldIndex","newIndex","reorderRecords","SortableList","items","SortableItem","SortableElement","_ref4","item","Card_Card","SortableContainer","_ref5","Array","isArray","concat","Column_templateObject","Column","newCard","setNewCard","Column_Container","NewCard_NewCard","addRecord","createRecord","AddCardButton_AddCardButton","ModalBody","EditModal_templateObject","EditModal_templateObject2","AddMark","EditModal_templateObject3","RowContainer","EditModal_templateObject4","width","Time","time","EditModal_templateObject5","defaultText","createdAt","modalBodyRef","textAreaRef","isMarksOpen","setIsMarksOpen","update","updateRecord","EditModal_Title","datetime","ms","date","Date","parseInt","getHours","toString","padStart","getMinutes","getDate","getMonth","getFullYear","getTimeByMs","green","red","removeRecord","NewColumn_templateObject","TitleInput","NewColumn_templateObject2","NewColumn_templateObject3","NewColumn","closeNewColumn","createColumn","inputRef","create","NewColumn_Container","NewColumn_AddButton","ChangeColorContainer","label","BoardPopover_templateObject","ChangeColor","BoardPopover_templateObject2","BoardPopover","withRouter","history","_useStore","$board","colorRef","htmlFor","click","onChange","newColor","setCurrentBoardColor","boardId","push","BoardHeader_templateObject","LocalButton","BoardHeader_templateObject2","marginLeft","HomeButton","Link","BoardHeader_templateObject3","BoardHeader","isTitleEdited","setIsTitleEdited","newTitle","renameBoard","BoardHeader_Container","to","aria-label","viewBox","fill","autoFocus","NewColumnContainer","boardTitle","isNewColumn","setIsNewColumn","NewColumn_NewColumn","addColumn","ColumnsList","Columns_templateObject","Columns","Columns_SortableList","axis","reorderColumns","Columns_SortableItem","MainContent","Dashboard_templateObject","Dashboard_templateObject2","theme","Dashboard","match","params","query","setCurrentBoard","board","Dashboard_Container","react_apollo_esm","fetchPolicy","loading","animationDuration","setColumns"],"mappings":"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","file":"static/js/6.7dccb43a.chunk.js","sourcesContent":["import {useEffect} from 'react';\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n    useEffect(\r\n        () => {\r\n            const listener = event => {\r\n                // Do nothing if clicking ref's element or descendent elements\r\n                if (!ref.current || ref.current.contains(event.target)) {\r\n                    return;\r\n                }\r\n\r\n                handler(event);\r\n            };\r\n\r\n            document.addEventListener('mousedown', listener);\r\n            document.addEventListener('touchstart', listener);\r\n\r\n            return () => {\r\n                document.removeEventListener('mousedown', listener);\r\n                document.removeEventListener('touchstart', listener);\r\n            };\r\n        },\r\n        // Add ref and handler to effect dependencies\r\n        // It's worth noting that because passed in handler is a new ...\r\n        // ... function on every render that will cause this effect ...\r\n        // ... callback/cleanup to run every render. It's not a big deal ...\r\n        // ... but to optimize you can wrap handler in useCallback before ...\r\n        // ... passing it into this hook.\r\n        [ref, handler]\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n    border: 1px solid #d1d1d1;\r\n    height: ${props => props.height || '35px'}\r\n    padding: 0 10px;\r\n    outline: none;\r\n    transition: 0.4s;\r\n    box-sizing: border-box;\r\n    border-radius: 3px;\r\n    \r\n    &:focus {\r\n        border: 1px solid #2196f3;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport {Input} from \"./Input\";\r\n\r\nexport const Form = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 320px;\r\n    min-height: 200px;\r\n    justify-content: space-evenly;\r\n    \r\n    ${Input}+${Input} {\r\n      margin-top: 2px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Error = styled.span`\r\n    color: red;\r\n    margin: 10px 0;\r\n`;","import styled from \"styled-components\";\r\nimport {Button} from \"../../../ui/atoms\";\r\n\r\nexport const SubmitButton = styled(Button)`\r\n    position: relative;\r\n    background-color: #00bcd5;\r\n    color: #ffffff;\r\n    height: 30px;\r\n    transition: background-color 0.2s ease-in-out;\r\n    margin-top: 10px;\r\n    \r\n    font-size: 14px;\r\n    line-height: 1.55;\r\n    font-weight: 600;\r\n    border-width: 1px;\r\n    border-radius: 3px;\r\n    background-position: center center;\r\n    border-color: transparent;\r\n    border-style: solid;\r\n    box-shadow: 0 5px 20px 0 rgba(25,105,176,1);\r\n    \r\n    &:hover {\r\n      background-color: #00abc1;\r\n    }\r\n    \r\n    &:active {\r\n      background-color: #009eb3;\r\n    }\r\n`;","\r\nexport {Input} from './Input';\r\nexport {Form} from './Form';\r\nexport {Error} from './Error';\r\nexport {SubmitButton} from './SubmitButton';","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Button, Icon} from \"../../../ui/atoms\";\r\n\r\nconst AddButton = styled(Button)`\r\n    color: #6b778c;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 8px;\r\n    min-height: 32px;\r\n    border-radius: 3px;\r\n    \r\n    &:hover {\r\n       background: lightgray;\r\n       transition: 0.3s;\r\n    }\r\n    \r\n    span:first-of-type {\r\n       margin-left: 30px;\r\n    }\r\n`;\r\n\r\nexport const AddCardButton = ({addNewCard}) => (\r\n    <AddButton onClick={addNewCard}>\r\n        <Icon name='plus'/>\r\n        <span>Add new Card</span>\r\n    </AddButton>\r\n);","import styled from \"styled-components\";\r\nimport {Button} from \"../../../ui/atoms\";\r\n\r\nexport const AddColumnButton = styled(Button)`\r\n    background-color: rgba(0,0,0,.12);\r\n    cursor: pointer;\r\n    color: #fff;\r\n    border-radius: 3px;\r\n    height: auto;\r\n    min-height: 32px;\r\n    padding: 6px 10px;\r\n    min-width: 270px;\r\n    max-width: 270px;\r\n    \r\n    @media (max-width: 425px) {\r\n      margin: 0 auto;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport {Button} from \"../../../ui/atoms\";\r\n\r\nexport const OptionsButton = styled(Button)`\r\n  height: 28px;\r\n  width: 28px;\r\n  border-radius: 3px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: 0.3s;\r\n  \r\n  &:hover {\r\n    background: lightgray;\r\n  }\r\n  \r\n  &:active {\r\n    background: darkgray;\r\n  }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Mark = styled.div`\r\n  width: 100%;\r\n  height: 30px;\r\n  background-color: ${props => props.backgroundColor};\r\n  opacity: 0.9;\r\n  border-radius: 5px;\r\n  transition: 0.1s;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding: 0 10px;\r\n  cursor: pointer;\r\n  \r\n  &+& {\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  &:hover {\r\n    opacity: 1;\r\n    transform: scale(1.01);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TextArea = styled.textarea`\r\n    margin-top: 5px;\r\n    box-shadow: 0 4px 8px -2px rgba(9,30,66,.25), 0 0 0 1px rgba(9,30,66,.08);\r\n    width: 100%;\r\n    min-height: 80px;\r\n    margin-bottom: 15px;\r\n    resize: none;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const PopoverTitle = styled.div`\r\n    box-sizing: border-box;\r\n    color: #6b778c;\r\n    display: block;\r\n    line-height: 40px;\r\n    border-bottom: 1px solid rgba(9,30,66,.13);\r\n    margin: 0 12px;\r\n    overflow: hidden;\r\n    padding: 0 32px;\r\n    position: relative;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    z-index: 1;\r\n`;","import gql from \"graphql-tag\";\r\n\r\nexport const GET_COLUMNS = gql`\r\n    query columns($title: String!) {\r\n        columns(title: $title) {\r\n            title, id, index, records {\r\n                id, text, index, createdAt, marks {\r\n                    id, color, \r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_BOARD = gql`\r\n    query board($title: String!) {\r\n        board(title: $title) {\r\n            id, title, color\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_RECORD = gql`\r\n    mutation createRecord ($text: String!, $columnId: ID!) {\r\n        createRecord(text: $text, columnId: $columnId) {\r\n            id, text, index, createdAt, marks {\r\n                id, color\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_COLUMN = gql`\r\n    mutation createColumn ($title: String!, $boardTitle: String!) {\r\n        createColumn(title: $title, boardTitle: $boardTitle) {\r\n            title, id, index, records {\r\n                text, columnId\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const REMOVE_COLUMN = gql`\r\n    mutation removeColumn ($columnId: ID!) {\r\n        removeColumn(columnId: $columnId)\r\n    }\r\n`;\r\n\r\nexport const UPDATE_RECORD = gql`\r\n    mutation updateRecord ($recordId: ID!, $text: String!) {\r\n        updateRecord(recordId: $recordId, text: $text)\r\n    }\r\n`;\r\n\r\nexport const CREATE_MARK = gql`\r\n    mutation createMark ($recordId: ID!, $color: String!) {\r\n        createMark(color: $color, recordId: $recordId) {\r\n            id, color\r\n        }\r\n    }\r\n`;\r\n\r\nexport const REMOVE_MARK = gql`\r\n    mutation removeMark ($markId: ID!) {\r\n        removeMark(markId: $markId)\r\n    }\r\n`;\r\n\r\nexport const RENAME_COLUMN = gql`\r\n    mutation renameColumn($columnId: ID!, $title: String!) {\r\n        renameColumn(columnId: $columnId, title: $title)\r\n    }\r\n`;\r\n\r\nexport const REMOVE_RECORD = gql`\r\n    mutation removeRecord($recordId: ID!) {\r\n        removeRecord(recordId: $recordId)\r\n    }\r\n`;\r\n\r\nexport const REORDER_COLUMNS = gql`\r\n    mutation reorderColumns($boardId: ID!, $oldIndex: Int!, $newIndex: Int!) {\r\n        reorderColumns(boardId: $boardId, oldIndex: $oldIndex, newIndex: $newIndex)\r\n    }\r\n`;\r\n\r\nexport const REORDER_RECORDS = gql`\r\n    mutation reorderRecords($columnId: ID!, $oldIndex: Int!, $newIndex: Int!) {\r\n        reorderRecords(columnId: $columnId, oldIndex: $oldIndex, newIndex: $newIndex)\r\n    }\r\n`;\r\n\r\nexport const REMOVE_BOARD = gql`\r\n    mutation removeBoard($boardId: ID!) {\r\n        removeBoard(boardId: $boardId)\r\n    }\r\n`;\r\n\r\nexport const RENAME_BOARD = gql`\r\n    mutation renameBoard($boardId: ID!, $title: String!) {\r\n        renameBoard(boardId: $boardId, title: $title)\r\n    }\r\n`;\r\n\r\nexport const CHANGE_BOARD_COLOR = gql`\r\n    mutation changeBoardColor($boardId: ID!, $color: String!) {\r\n        changeBoardColor(boardId: $boardId, color: $color)\r\n    }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Popover = styled.div`\r\n    position: absolute;\r\n    background: #fff;\r\n    border-radius: 3px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    box-shadow: 0 8px 16px -4px rgba(9,30,66,.25), 0 0 0 1px rgba(9,30,66,.08);\r\n    width: 300px;\r\n    padding: 4px;\r\n    z-index: 70;\r\n    top: ${props => props.top || '45px'};\r\n    left: ${props => props.left || '220px'};\r\n    text-align: center;\r\n    transform: translateZ(0);\r\n    \r\n    @media (max-width: 375px) {\r\n      width: 250px;\r\n    }\r\n    \r\n    @media (max-width: 768px) {\r\n      left: ${props => props.left || '30px'};\r\n    }\r\n`;","import React, {useRef, useState} from 'react';\r\nimport {useOnClickOutside} from \"../hooks\";\r\nimport {PopoverTitle} from \"../../../ui/molecules/PopoverTitle\";\r\nimport {Loader, PopoverButton} from \"../../../ui/atoms\";\r\nimport {withApollo} from \"react-apollo\";\r\nimport {REMOVE_COLUMN} from \"../api\";\r\nimport {removeColumn} from \"../models/dashboard\";\r\nimport {Popover} from \"../../../ui/organisms\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getErrorMessage} from \"../../common/utils\";\r\n\r\nexport const ColumnPopover = withApollo(({closePopover, columnId, client, op}) => {\r\n    let popoverRef = useRef(null);\r\n    let [isLoading, setIsLoading] = useState(false);\r\n\r\n    useOnClickOutside(popoverRef, closePopover);\r\n\r\n    const remove = () => {\r\n        setIsLoading(true);\r\n        client.mutate({\r\n            mutation: REMOVE_COLUMN,\r\n            variables: {\r\n                columnId\r\n            }\r\n        })\r\n            .then(() => {\r\n                setIsLoading(false);\r\n                closePopover();\r\n                removeColumn(columnId);\r\n            })\r\n            .catch(error => toast.error(getErrorMessage(error)));\r\n    };\r\n\r\n    return (\r\n        <Popover ref={popoverRef}>\r\n            <PopoverTitle>Actions with list</PopoverTitle>\r\n            <PopoverButton onClick={op}>Rename list</PopoverButton>\r\n            <PopoverButton onClick={remove} disabled={isLoading}>\r\n                Remove list\r\n                {\r\n                    isLoading && <Loader color='#fff'/>\r\n                }\r\n            </PopoverButton>\r\n        </Popover>\r\n    );\r\n});","import React, {useRef, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {OptionsButton} from \"../atoms\";\r\nimport {ColumnPopover} from \"./ColumnPopover\";\r\nimport {useOnClickOutside} from \"../hooks\";\r\nimport {Input} from \"../../auth/atoms\";\r\nimport {withApollo} from \"react-apollo\";\r\nimport {RENAME_COLUMN} from \"../api\";\r\nimport {renameColumn} from \"../models/dashboard\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getErrorMessage} from \"../../common/utils\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    min-height: 34px;\r\n    padding: 10px 0 4px 0;\r\n    overflow: visible;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const Title = withApollo(({icon, children, client, columnId}) => {\r\n    let [isTitleRenamed, setIsTitleRenamed] = useState(false);\r\n    let [isPopoverOpen, setIsPopoverOpen] = useState(false);\r\n    let titleRef = useRef(null);\r\n\r\n    const renameColumnn = () => {\r\n        const title = titleRef.current.value;\r\n        if (title !== children && title.length > 0 && title.length < 20) {\r\n            client.mutate({\r\n                mutation: RENAME_COLUMN,\r\n                variables: {\r\n                    columnId,\r\n                    title\r\n                }\r\n            })\r\n                .then(() => {\r\n                    renameColumn({\r\n                        columnId,\r\n                        title\r\n                    });\r\n                })\r\n                .catch(error => toast.error(getErrorMessage(error)));\r\n        }\r\n        setIsTitleRenamed(false);\r\n    };\r\n\r\n    const op = async () => {\r\n        await setIsTitleRenamed(true);\r\n        titleRef.current.focus();\r\n        closePopover();\r\n    };\r\n\r\n    useOnClickOutside(titleRef, renameColumnn);\r\n\r\n    const popover = () => {\r\n        setIsPopoverOpen(!isPopoverOpen);\r\n    };\r\n\r\n    const closePopover = () => {\r\n        setIsPopoverOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                isTitleRenamed\r\n                    ? <Input height='28px' defaultValue={children} ref={titleRef}/>\r\n                    : <Text>{children}</Text>\r\n            }\r\n            <OptionsButton onClick={popover}>{icon}</OptionsButton>\r\n            {\r\n                isPopoverOpen &&\r\n                <ColumnPopover\r\n                    op={op}\r\n                    closePopover={closePopover}\r\n                    columnId={columnId}\r\n                />\r\n            }\r\n        </Container>\r\n    );\r\n});","\r\nexport const getMarksByRecordId = (columns, recordId) => {\r\n    const column = columns.find(column => column.records.find(record => record.id === recordId));\r\n    return Object.is(column, undefined)\r\n        ? [] : column.records.find(record => record.id === recordId).marks;\r\n};\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {useStore} from \"effector-react\";\r\nimport {$dashboard} from \"../models/dashboard\";\r\nimport {getMarksByRecordId} from \"../selectors\";\r\n\r\nconst MarksList = styled.ul`\r\n  display: flex;\r\n  align-self: flex-start;\r\n  margin: 4px 0 8px 0;\r\n`;\r\n\r\nconst MiniMark = styled.li`\r\n  width: 44px;\r\n  height: 6px;\r\n  border-radius: 3px;\r\n  opacity: 0.9;\r\n  background-color: ${props => props.backgroundColor};\r\n  cursor: pointer;\r\n  \r\n  &+& {\r\n    margin-left: 3px;\r\n  }\r\n`;\r\n\r\nexport const MiniMarks = ({recordId}) => {\r\n    let {columns} = useStore($dashboard);\r\n    let miniMarks = getMarksByRecordId(columns, recordId);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                miniMarks.length > 0 &&\r\n                <MarksList>\r\n                    {\r\n                        miniMarks.map(({color}, index) => (\r\n                            <MiniMark key={index} backgroundColor={color}/>\r\n                        ))\r\n                    }\r\n                </MarksList>\r\n            }\r\n        </>\r\n    );\r\n};","import React, {useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Button, Icon} from \"../../../ui/atoms\";\r\nimport usePortal from \"react-useportal\";\r\nimport {EditModal} from \"../organisms\";\r\nimport {MiniMarks} from \"./MiniMarks\";\r\n\r\nconst Container = styled.li`\r\n    position: relative;\r\n    background: #fff;\r\n    min-height: 30px;\r\n    border-radius: 3px;\r\n    margin: 8px 0;\r\n    padding: 4px;\r\n    cursor: grab;\r\n    word-break: break-all;\r\n    transition: 0.1s;\r\n    box-shadow: 0 1px 0 rgba(9,30,66,.25);\r\n    \r\n    &:hover {\r\n      background: whitesmoke;\r\n    }\r\n`;\r\n\r\nconst EditButton = styled(Button)`\r\n    position: absolute;\r\n    left: calc(100% - 30px);\r\n    top: 1px;\r\n    transform: translateZ(0);\r\n    height: 28px;\r\n    width: 28px;\r\n    border-radius: 3px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: 0.3s;\r\n    background: lightgray;\r\n      \r\n    &:hover {\r\n      background: darkgray;\r\n    }\r\n      \r\n    &:active {\r\n      background: gray;\r\n    }\r\n`;\r\n\r\nexport const Card = ({record}) => {\r\n    let [isHovered, setIsEditHovered] = useState(false);\r\n    const {openPortal, closePortal, isOpen, Portal} = usePortal();\r\n\r\n    const modalOpenClose = () => {\r\n        isOpen ? closePortal() : openPortal();\r\n    };\r\n\r\n    return (\r\n        <Container\r\n            onMouseOver={() => setIsEditHovered(true)}\r\n            onMouseLeave={() => setIsEditHovered(false)}\r\n        >\r\n            <MiniMarks recordId={record.id}/>\r\n            {record.text}\r\n            {\r\n                isHovered &&\r\n                <EditButton onClick={modalOpenClose}>\r\n                    <Icon name='edit'/>\r\n                </EditButton>\r\n            }\r\n            {\r\n                isOpen &&\r\n                <Portal>\r\n                    <EditModal\r\n                        closePortal={closePortal}\r\n                        record={record}\r\n                    />\r\n                </Portal>\r\n            }\r\n        </Container>\r\n    );\r\n};","import React, {useRef} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {useOnClickOutside} from \"../hooks\";\r\nimport {Button} from \"../../../ui/atoms\";\r\n\r\nconst Container = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 90px;\r\n    margin-bottom: 6px;\r\n`;\r\n\r\nconst AddButton = styled(Button)`\r\n    background-color: #5aac44;\r\n    box-shadow: 0 1px 0 0 #3f6f21;\r\n    color: #fff;\r\n    font-weight: 700;\r\n    margin: 8px 4px 0 0;\r\n    padding: 6px 12px;\r\n    border-radius: 3px;\r\n    width: 100%;\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n    height: 55px;\r\n    resize: none;\r\n    border-radius: 3px;\r\n`;\r\n\r\nexport const NewCard = ({createCard, removeNewCard}) => {\r\n\r\n    const ref = useRef(null);\r\n    const textRef = useRef(null);\r\n    useOnClickOutside(ref, removeNewCard);\r\n\r\n    const onSubmit = async event => {\r\n        event.preventDefault();\r\n        await createCard(textRef.current.value);\r\n        if(textRef.current)\r\n            textRef.current.value = '';\r\n    };\r\n\r\n    return (\r\n        <Container onSubmit={onSubmit} ref={ref}>\r\n            <TextArea ref={textRef} placeholder='Enter text'/>\r\n            <AddButton type='submit'>Add card</AddButton>\r\n        </Container>\r\n    );\r\n};","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {CREATE_MARK, REMOVE_MARK} from \"../api\";\r\nimport {$dashboard, addMark, removeMark} from \"../models/dashboard\";\r\nimport {withApollo} from \"react-apollo\";\r\nimport {Icon} from \"../../../ui/atoms\";\r\nimport {useStore} from \"effector-react\";\r\nimport {getMarksByRecordId} from \"../selectors\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getErrorMessage} from \"../../common/utils\";\r\nimport {Mark} from \"../atoms\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 5px;\r\n  padding: 15px;\r\n  width: 60%;\r\n`;\r\n\r\nconst colors = [\r\n    '#61bd4f',\r\n    '#ffed1a',\r\n    '#ff9f1a',\r\n    '#eb5a46'\r\n];\r\n\r\nexport const Marks = withApollo(({recordId, client}) => {\r\n    let {columns} = useStore($dashboard);\r\n    let marks = getMarksByRecordId(columns, recordId);\r\n\r\n    const createMark = color => {\r\n        client.mutate({\r\n            mutation: CREATE_MARK,\r\n            variables: {\r\n                color,\r\n                recordId\r\n            }\r\n        })\r\n            .then(({data}) => {\r\n                addMark({\r\n                    recordId,\r\n                    mark: data.createMark\r\n                });\r\n            })\r\n            .catch(error => toast.error(getErrorMessage(error)));\r\n    };\r\n\r\n    const remove = color => {\r\n        const markId = marks.find(mark => mark.color === color).id;\r\n        client.mutate({\r\n            mutation: REMOVE_MARK,\r\n            variables: {\r\n                markId\r\n            }\r\n        })\r\n            .then(() => {\r\n                removeMark(markId);\r\n            })\r\n            .catch(error => toast.error(getErrorMessage(error)));\r\n    };\r\n\r\n    const markOnClick = color => {\r\n        const isExist = marks.some(mark => mark.color === color);\r\n        isExist ? remove(color) : createMark(color);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                colors.map((color, index) =>\r\n                    <Mark key={index} onClick={() => markOnClick(color)} backgroundColor={color}>\r\n                        {marks.some(mark => mark.color === color) && <Icon name='check'/>}\r\n                    </Mark>\r\n                )\r\n            }\r\n        </Container>\r\n    );\r\n});","import React, {useEffect, useRef} from \"react\";\r\nimport {SortableContainer, SortableElement} from \"react-sortable-hoc\";\r\nimport {Card} from \"../molecules\";\r\nimport styled from \"styled-components\";\r\nimport {reorderRecords} from \"../models/dashboard\";\r\nimport {REORDER_RECORDS} from \"../api\";\r\nimport {withApollo} from \"react-apollo\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getErrorMessage} from \"../../common/utils\";\r\n\r\nconst CardsList = styled.ul`\r\n   overflow-y: auto;\r\n`;\r\n\r\nexport const Cards = withApollo(({client, columnId, records}) => {\r\n    let containerRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n    }, [records.length]);\r\n\r\n    const onSortEnd = async ({oldIndex, newIndex}) => {\r\n        if(newIndex !== oldIndex) {\r\n            reorderRecords({columnId, oldIndex, newIndex});\r\n            client.mutate({\r\n                mutation: REORDER_RECORDS,\r\n                variables: {\r\n                    columnId,\r\n                    oldIndex: records[oldIndex].index,\r\n                    newIndex: records[newIndex].index\r\n                }\r\n            }).catch(error => toast.error(getErrorMessage(error)));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SortableList\r\n            items={records}\r\n            onSortEnd={onSortEnd}\r\n            containerRef={containerRef}\r\n            />\r\n    );\r\n});\r\n\r\nconst SortableItem = SortableElement(({item}) => <Card record={item}/>);\r\n\r\n\r\nconst SortableList = SortableContainer(({items, containerRef}) => (\r\n    <CardsList ref={containerRef}>\r\n        {\r\n            Array.isArray(items) && items.map((item, index) => (\r\n                <SortableItem key={`record-${index}`} index={index} item={item}/>\r\n            ))\r\n        }\r\n    </CardsList>\r\n));","import React, {useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {NewCard, Title} from \"../molecules\";\r\nimport {AddCardButton} from \"../atoms\";\r\nimport {withApollo} from \"react-apollo\";\r\nimport {CREATE_RECORD} from \"../api\";\r\nimport {Cards} from \"./Cards\";\r\nimport {addRecord} from \"../models/dashboard\";\r\nimport {Icon} from \"../../../ui/atoms\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getErrorMessage} from \"../../common/utils\";\r\n\r\nconst Container = styled.div`\r\n    background: #dfe1e6;\r\n    border-radius: 3px;\r\n    width: 270px;\r\n    padding: 4px 10px 6px 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    white-space: normal;\r\n    margin: 0 10px;\r\n    height: 100%;\r\n    max-height: calc(100vh - 100px);\r\n`;\r\n\r\nexport const Column = withApollo(({client, item}) => {\r\n    let [newCard, setNewCard] = useState(false);\r\n\r\n    const addNewCard = () => {\r\n        setNewCard(true);\r\n    };\r\n\r\n    const createCard = text => {\r\n        if (text.length > 0 && text.length < 400) {\r\n            client.mutate({\r\n                mutation: CREATE_RECORD,\r\n                variables: {\r\n                    columnId: item.id,\r\n                    text\r\n                }\r\n            })\r\n                .then(({data}) => {\r\n                    addRecord({\r\n                        columnId: item.id,\r\n                        record: data.createRecord\r\n                    });\r\n                })\r\n                .catch(error => toast.error(getErrorMessage(error)));\r\n        }\r\n    };\r\n\r\n    const removeNewCard = () => {\r\n        setNewCard(false);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Title icon={<Icon name='ellipsis'/>} columnId={item.id}>\r\n                {item.title}\r\n            </Title>\r\n            <Cards columnId={item.id} records={item.records}/>\r\n            {\r\n                newCard\r\n                    ? <NewCard createCard={createCard} removeNewCard={removeNewCard}/>\r\n                    : <AddCardButton addNewCard={addNewCard}/>\r\n            }\r\n        </Container>\r\n    );\r\n});","import React, {useRef, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {LuminousButton, Modal} from \"../../../ui/atoms\";\r\nimport {useOnClickOutside} from \"../hooks\";\r\nimport {withApollo} from \"react-apollo\";\r\nimport {REMOVE_RECORD, UPDATE_RECORD} from \"../api\";\r\nimport {removeRecord, updateRecord} from \"../models/dashboard\";\r\nimport {Marks, MiniMarks} from \"../molecules\";\r\nimport {getTimeByMs} from \"../utils\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getErrorMessage} from \"../../common/utils\";\r\nimport {TextArea} from \"../atoms\";\r\n\r\nconst ModalBody = styled.form`\r\n  background: #f4f5f7;\r\n  width: 90%;\r\n  max-width: 600px;\r\n  max-height: 800px;\r\n  border-radius: 6px;\r\n  padding: 15px;\r\n  box-shadow: 5px 12px 50px 3px rgba(0,0,0,0.5);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 1.4rem;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin: 0 0 8px 0;\r\n`;\r\n\r\nconst AddMark = styled.span`\r\n  text-decoration: underline;\r\n  align-self: flex-start;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst RowContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: ${props => props.width || '100%'};\r\n`;\r\n\r\nconst Time = styled.time`\r\n  font-size: 0.9rem;\r\n  color: darkgray;\r\n`;\r\n\r\nexport const EditModal = withApollo(({closePortal, client, record}) => {\r\n    const {\r\n        id: recordId,\r\n        text: defaultText,\r\n        createdAt\r\n    } = record;\r\n\r\n    let modalBodyRef = useRef(null);\r\n    let textAreaRef = useRef(null);\r\n    let [isMarksOpen, setIsMarksOpen] = useState(false);\r\n    useOnClickOutside(modalBodyRef, closePortal);\r\n\r\n    const update = async event => {\r\n        event.preventDefault();\r\n\r\n        const text = textAreaRef.current.value;\r\n        if (text !== defaultText && text.length > 1 && text.length < 400) {\r\n            client.mutate({\r\n                mutation: UPDATE_RECORD,\r\n                variables: {\r\n                    text,\r\n                    recordId\r\n                }\r\n            })\r\n                .then(() => {\r\n                    updateRecord({text, recordId});\r\n                })\r\n                .catch(error => toast.error(getErrorMessage(error)));\r\n        }\r\n        closePortal();\r\n    };\r\n\r\n    const openCloseMarks = () => {\r\n        isMarksOpen ? setIsMarksOpen(false) : setIsMarksOpen(true);\r\n    };\r\n\r\n    const remove = () => {\r\n        client.mutate({\r\n            mutation: REMOVE_RECORD,\r\n            variables: {\r\n                recordId\r\n            }\r\n        })\r\n            .then(() => {\r\n                removeRecord(recordId);\r\n                closePortal();\r\n            })\r\n            .catch(error => toast.error(getErrorMessage(error)));\r\n    };\r\n\r\n    return (\r\n        <Modal>\r\n            <ModalBody ref={modalBodyRef} onSubmit={update}>\r\n                <Title>Edit record</Title>\r\n                <MiniMarks recordId={recordId}/>\r\n                <TextArea ref={textAreaRef} defaultValue={defaultText}/>\r\n                <RowContainer>\r\n                    <AddMark onClick={openCloseMarks}>Marks</AddMark>\r\n                    <Time datetime={createdAt}>{getTimeByMs(createdAt)}</Time>\r\n                </RowContainer>\r\n                {\r\n                    isMarksOpen && <Marks recordId={recordId}/>\r\n                }\r\n                <RowContainer width={'280px'}>\r\n                    <LuminousButton green>Save</LuminousButton>\r\n                    <LuminousButton red onClick={remove}>Remove</LuminousButton>\r\n                </RowContainer>\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n});","export const getTimeByMs = ms => {\r\n    const date = new Date(parseInt(ms));\r\n\r\n    return `\r\n    ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}  \r\n    ${date.getDate()}.${date.getMonth()}.${date.getFullYear()}\r\n    `\r\n};","import React, {useRef} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {useOnClickOutside} from \"../hooks\";\r\nimport {Button} from \"../../../ui/atoms\";\r\n\r\nconst Container = styled.form`\r\n    background: #dfe1e6;\r\n    border-radius: 3px;\r\n    min-width: 270px;\r\n    min-height: 85px;\r\n    padding: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    white-space: normal;\r\n    margin: 0 10px;\r\n`;\r\n\r\nconst TitleInput = styled.input``;\r\n\r\nconst AddButton = styled(Button)`\r\n    background-color: #5aac44;\r\n    box-shadow: 0 1px 0 0 #3f6f21;\r\n    color: #fff;\r\n    font-weight: 700;\r\n    line-height: 20px;\r\n    margin: 8px 4px 0 0;\r\n    padding: 6px 12px;\r\n    min-width: 60%;\r\n`;\r\n\r\n\r\nexport const NewColumn = ({closeNewColumn, createColumn}) => {\r\n    const containerRef = useRef(null);\r\n    const inputRef = useRef(null);\r\n\r\n    useOnClickOutside(containerRef, closeNewColumn);\r\n\r\n    const create = async event => {\r\n        event.preventDefault();\r\n        await createColumn(inputRef.current.value);\r\n        if(inputRef.current)\r\n            inputRef.current.value = '';\r\n    };\r\n\r\n    return (\r\n        <Container ref={containerRef} onSubmit={create}>\r\n            <TitleInput ref={inputRef}/>\r\n            <AddButton>Add list</AddButton>\r\n        </Container>\r\n    );\r\n};","import React, {useRef, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {useOnClickOutside} from \"../hooks\";\r\nimport {Popover} from \"../../../ui/organisms\";\r\nimport {PopoverTitle} from \"../../../ui/molecules\";\r\nimport {ColorPicker, Loader, PopoverButton} from \"../../../ui/atoms\";\r\nimport {withApollo} from \"react-apollo\";\r\nimport {$board, setCurrentBoardColor} from \"../models/board\";\r\nimport {useStore} from \"effector-react\";\r\nimport {CHANGE_BOARD_COLOR, REMOVE_BOARD} from \"../api\";\r\nimport {withRouter} from \"react-router\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getErrorMessage} from \"../../common/utils\";\r\n\r\nconst ChangeColorContainer = styled.label`\r\n  margin: 10px 5px;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  color: #000;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ChangeColor = styled.span`\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const BoardPopover = withRouter(withApollo(({closePopover, history, client}) => {\r\n    let {id, color} = useStore($board);\r\n    let popoverRef = useRef(null);\r\n    let colorRef = useRef(null);\r\n    let [isLoading, setIsLoading] = useState(false);\r\n\r\n    const onChangeColor = event => {\r\n        const newColor = event.target.value;\r\n        setCurrentBoardColor(newColor);\r\n        client.mutate({\r\n            mutation: CHANGE_BOARD_COLOR,\r\n            variables: {\r\n                boardId: id,\r\n                color: newColor\r\n            }\r\n        }).catch(error => toast.error(getErrorMessage(error)));\r\n    };\r\n\r\n    useOnClickOutside(popoverRef, closePopover);\r\n\r\n    const removeBoard = () => {\r\n        setIsLoading(true);\r\n        client.mutate({\r\n            mutation: REMOVE_BOARD,\r\n            variables: {\r\n                boardId: id\r\n            }\r\n        })\r\n            .then(() => history.push('/boards'))\r\n            .catch(error => toast.error(getErrorMessage(error)))\r\n    };\r\n\r\n    const onClickChangeColor = () => {\r\n        colorRef.current.click();\r\n    };\r\n\r\n    return (\r\n        <Popover ref={popoverRef} left='calc(100% - 310px)' top='38px'>\r\n            <PopoverTitle>Actions with board</PopoverTitle>\r\n            <ChangeColorContainer htmlFor='colorPicked' onClick={onClickChangeColor}>\r\n                <ChangeColor>Change color</ChangeColor>\r\n                <ColorPicker onChange={onChangeColor} ref={colorRef} defaultValue={color}/>\r\n            </ChangeColorContainer>\r\n            <PopoverButton onClick={removeBoard} disabled={isLoading}>\r\n                Remove board\r\n                {\r\n                    isLoading && <Loader color='#fff'/>\r\n                }\r\n            </PopoverButton>\r\n        </Popover>\r\n    );\r\n}));","import React, {useState, useRef} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Button, Icon, SvgIcon} from \"../../../ui/atoms\";\r\nimport {BoardPopover} from \"../molecules/BoardPopover\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useOnClickOutside} from \"../hooks\";\r\nimport {Input} from \"../../auth/atoms\";\r\nimport {$board, renameBoard} from \"../models/board\";\r\nimport {useStore} from \"effector-react\";\r\nimport {RENAME_BOARD} from \"../api\";\r\nimport {withApollo} from \"react-apollo\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getErrorMessage} from \"../../common/utils\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 40px;\r\n  padding: 0 10px 10px;\r\n  display: flex;\r\n`;\r\n\r\nconst LocalButton = styled(Button)`\r\n    position: relative;\r\n    color: #fff;\r\n    height: 30px;\r\n    padding: 4px 20px;\r\n    border-radius: 5px;\r\n    transition: 100ms;\r\n    margin-left: ${props => props.marginLeft};\r\n    \r\n    &:hover {\r\n      background-color: rgba(0, 0, 0, 0.35);\r\n    }\r\n`;\r\n\r\nconst HomeButton = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 30px;\r\n  width: 30px;\r\n  border-radius: 3px;\r\n  background-color: hsla(0,0%,100%,.2);\r\n  margin-right: 5px;\r\n`;\r\n\r\nexport const BoardHeader = withApollo(({client}) => {\r\n    let {id, title} = useStore($board);\r\n    let [isPopoverOpen, setIsPopoverOpen] = useState(false);\r\n    let [isTitleEdited, setIsTitleEdited] = useState(false);\r\n    let titleRef = useRef(null);\r\n\r\n    const openPopover = () => {\r\n        setIsPopoverOpen(true);\r\n    };\r\n\r\n    const closePopover = () => {\r\n        setIsPopoverOpen(false);\r\n    };\r\n\r\n    const editTitle = () => {\r\n        setIsTitleEdited(true);\r\n    };\r\n\r\n    const rename = () => {\r\n        const newTitle = titleRef.current.value;\r\n\r\n        if (newTitle !== title) {\r\n            client.mutate({\r\n                mutation: RENAME_BOARD,\r\n                variables: {\r\n                    boardId: id,\r\n                    title: newTitle\r\n                }\r\n            })\r\n                .then(() => renameBoard(newTitle))\r\n                .catch(error => toast.error(getErrorMessage(error)));\r\n        }\r\n        setIsTitleEdited(false);\r\n    };\r\n\r\n    useOnClickOutside(titleRef, rename);\r\n\r\n    return (\r\n        <Container>\r\n            <HomeButton to='/boards' aria-label='Go to boards list'>\r\n                <SvgIcon name='home' viewBox='0 0 611.997 611.998' fill='#fff' width={'1.1em'} height={'1.1em'}/>\r\n            </HomeButton>\r\n            {\r\n                isTitleEdited\r\n                    ? <Input autoFocus ref={titleRef} defaultValue={title} height={'30px'}/>\r\n                    : <LocalButton onClick={editTitle} aria-label='Edit board title'>{title}</LocalButton>\r\n            }\r\n            <LocalButton marginLeft='auto' onClick={openPopover} aria-label='Open board options'>\r\n                <Icon color='#fff' name={'ellipsis'}/>\r\n            </LocalButton>\r\n            {\r\n                isPopoverOpen && <BoardPopover closePopover={closePopover}/>\r\n            }\r\n        </Container>\r\n    );\r\n});","import React, {useState} from 'react';\r\nimport {NewColumn} from \"./NewColumn\";\r\nimport {AddColumnButton} from \"../atoms\";\r\nimport {CREATE_COLUMN} from \"../api\";\r\nimport {addColumn} from \"../models/dashboard\";\r\nimport {withApollo} from \"react-apollo\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getErrorMessage} from \"../../common/utils\";\r\n\r\nexport const NewColumnContainer = withApollo(({boardTitle, client}) => {\r\n    let [isNewColumn, setIsNewColumn] = useState(false);\r\n\r\n    const addNewColumn = () => {\r\n        setIsNewColumn(true);\r\n    };\r\n\r\n    const closeNewColumn = () => {\r\n        setIsNewColumn(false);\r\n    };\r\n\r\n    const createColumn = title => {\r\n        if (title.length > 0 && title.length < 20) {\r\n            client.mutate({\r\n                mutation: CREATE_COLUMN,\r\n                variables: {\r\n                    title,\r\n                    boardTitle\r\n                }\r\n            })\r\n                .then(({data}) => {\r\n                    addColumn(data.createColumn);\r\n                })\r\n                .catch(error => toast.error(getErrorMessage(error)));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isNewColumn\r\n                    ? <NewColumn createColumn={createColumn} closeNewColumn={closeNewColumn}/>\r\n                    : <AddColumnButton onClick={addNewColumn}>+ Add new list</AddColumnButton>\r\n            }\r\n        </>\r\n    );\r\n});","import React from 'react';\r\nimport {Column} from \"./Column\";\r\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport {$dashboard, reorderColumns} from \"../models/dashboard\";\r\nimport {useStore} from \"effector-react\";\r\nimport styled from \"styled-components\";\r\nimport {withApollo} from \"react-apollo\";\r\nimport {REORDER_COLUMNS} from \"../api\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getErrorMessage} from \"../../common/utils\";\r\nimport {$board} from \"../models/board\";\r\n\r\nconst ColumnsList = styled.ul`\r\n    display: flex;\r\n`;\r\n\r\nexport const Columns = withApollo(({client}) => {\r\n    const {columns} = useStore($dashboard);\r\n    const {id: boardId} = useStore($board);\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        if (newIndex !== oldIndex) {\r\n            reorderColumns({oldIndex, newIndex});\r\n            client.mutate({\r\n                mutation: REORDER_COLUMNS,\r\n                variables: {\r\n                    boardId,\r\n                    oldIndex: columns[oldIndex].index,\r\n                    newIndex: columns[newIndex].index\r\n                }\r\n            })\r\n                .catch(error => toast.error(getErrorMessage(error)));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SortableList axis='x' items={columns} onSortEnd={onSortEnd}/>\r\n    );\r\n});\r\n\r\nconst SortableItem = SortableElement(({item}) => <Column item={item}/>);\r\n\r\n\r\nconst SortableList = SortableContainer(({items}) => (\r\n    <ColumnsList>\r\n        {\r\n            items.map((item, index) => (\r\n                <SortableItem key={`column-${index}`} index={index} item={item}/>\r\n            ))\r\n        }\r\n    </ColumnsList>\r\n));","import React, {useEffect} from 'react';\r\nimport {BoardHeader, NewColumnContainer} from \"../organisms\";\r\nimport styled from \"styled-components\";\r\nimport {Query, withApollo} from \"react-apollo\";\r\nimport {GET_BOARD, GET_COLUMNS} from \"../api\";\r\nimport {Columns} from \"../organisms/Columns\";\r\nimport {Loader} from \"../../../ui/atoms\";\r\nimport {setColumns} from \"../models/dashboard\";\r\nimport {setCurrentBoard} from \"../models/board\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getErrorMessage} from \"../../common/utils\";\r\n\r\nconst MainContent = styled.div`\r\n   display: flex;\r\n   align-items: flex-start;\r\n   width: 100%;\r\n   height: 100%;\r\n   margin-top: 10px;\r\n   overflow-x: auto;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: calc(100% - 40px);\r\n  padding: 10px 1% 0 1%;\r\n  background-color: ${props => props.theme.backgroundColor || '#0067a3'}\r\n`;\r\n\r\nexport const Dashboard = withApollo(({match: {params: {title: boardTitle}}, client}) => {\r\n    useEffect(() => {\r\n        client.query({\r\n            query: GET_BOARD,\r\n            variables: {\r\n                title: boardTitle\r\n            }\r\n        }).then(({data}) => {\r\n            setCurrentBoard(data.board);\r\n        }).catch(error => toast.error(getErrorMessage(error)));\r\n    }, [client, boardTitle]);\r\n\r\n    return (\r\n        <Container>\r\n            <Query query={GET_COLUMNS} variables={{title: boardTitle}} fetchPolicy='no-cache'>\r\n                {({data, loading, error}) => {\r\n                    if (loading)\r\n                        return <Loader width='40px' height='40px' color='#fff' animationDuration='0.8'/>;\r\n                    if (error)\r\n                        return <div>Error</div>;\r\n\r\n                    setColumns(data.columns);\r\n                    return (\r\n                        <>\r\n                            <BoardHeader/>\r\n                            <MainContent>\r\n                                <Columns/>\r\n                                <NewColumnContainer boardTitle={boardTitle}/>\r\n                            </MainContent>\r\n                        </>\r\n                    );\r\n                }}\r\n            </Query>\r\n        </Container>\r\n    );\r\n});","\r\nexport {Dashboard as default} from './pages';"],"sourceRoot":""}